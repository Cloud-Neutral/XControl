server {
  listen 80;
  server_name www.svc.plus cn-homepage.svc.plus;
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl;
  server_name www.svc.plus cn-homepage.svc.plus;

  ssl_certificate     /etc/ssl/svc.plus.pem;
  ssl_certificate_key /etc/ssl/svc.plus.rsa.key;
  ssl_protocols       TLSv1.2 TLSv1.3;
  ssl_ciphers         HIGH:!aNULL:!MD5;

  # =======================
  # API 反向代理（保持原样）
  # =======================
  location /api/ {
    proxy_pass http://127.0.0.1:8080;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # /api/askai 接口限流（保持原样）
  location = /api/askai {
    access_by_lua_block {
      local redis = require "resty.redis"
      local r = redis:new()
      r:set_timeout(200)
      local ok, err = r:connect("127.0.0.1", 6379)
      if not ok then
        ngx.log(ngx.ERR, "Redis connect error: ", err)
        return ngx.exit(500)
      end

      local user = ngx.var.arg_user or ngx.var.remote_addr
      local today = os.date("%Y%m%d")
      local key = "limit:user:" .. user .. ":" .. today

      local count, err = r:incr(key)
      if count == 1 then r:expire(key, 86400) end
      if count > 200 then
        ngx.status = 429
        ngx.header["Content-Type"] = "text/plain; charset=utf-8"
        ngx.say("Too Many Requests: daily limit reached")
        return ngx.exit(429)
      end
    }

    proxy_pass http://127.0.0.1:8080;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # =======================
  # 页面请求：全部转发到 Next.js
  # =======================

  location ^~ /_next/ {
    proxy_pass http://127.0.0.1:3000;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
  }

  location /favicon.ico {
    proxy_pass http://127.0.0.1:3000;
  }
  location / {
    proxy_pass http://127.0.0.1:3000;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # 若需要进一步省资源，可开启微缓存（可选）
    # proxy_cache            ssr_cache;
    # proxy_cache_key        $scheme$host$request_uri;
    # proxy_cache_valid 200  5s;
    # proxy_cache_valid 404  1s;
    # add_header X-Cache $upstream_cache_status;
  }

  # 拒绝访问隐藏文件（如 .env）
  location ~ /\. {
    deny all;
  }
}
