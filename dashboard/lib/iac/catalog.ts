import type { CatalogItem, ProviderDefinition } from './types'

export const CATALOG: CatalogItem[] = [
  {
    key: 'landing_zone',
    title: '多云 Landing Zone 基线',
    subtitle: 'Multi-Cloud Landing Zone',
    description:
      '统一构建账号与权限边界、日志审计、安全基线、网络隔离及成本告警的多云 Landing Zone 模块，支撑 IaC 自动化与合规运营。',
    highlights: [
      '主账号安全、MFA、RAM / IAM 用户组模板与最小权限策略',
      'ActionTrail / CloudTrail 日志、Cloud Config / Config 规则与安全中心告警',
      'Pulumi / Terraform 编排，GitHub CI / GitLab CI 触发多环境部署',
    ],
    products: {
      aws: 'AWS Control Tower Landing Zone',
      gcp: 'Google Cloud Foundation Toolkit',
      azure: 'Azure Enterprise-Scale Landing Zone',
      aliyun: '阿里云 Landing Zone 基线（MVP）',
    },
    iac: {
      aws: {
        detailSlug: 'control-tower-landing-zone',
        githubWorkflow: 'landing-zone.yml',
        githubInputs: { provider: 'aws', stack: 'landing-zone' },
        gitlabPipeline: 'landing-zone',
        gitlabVariables: { PROVIDER: 'AWS', STACK: 'LANDING_ZONE' },
      },
      gcp: {
        detailSlug: 'gcp-landing-zone',
        githubWorkflow: 'landing-zone.yml',
        githubInputs: { provider: 'gcp', stack: 'landing-zone' },
        gitlabPipeline: 'landing-zone',
        gitlabVariables: { PROVIDER: 'GCP', STACK: 'LANDING_ZONE' },
      },
      azure: {
        detailSlug: 'azure-landing-zone',
        githubWorkflow: 'landing-zone.yml',
        githubInputs: { provider: 'azure', stack: 'landing-zone' },
        gitlabPipeline: 'landing-zone',
        gitlabVariables: { PROVIDER: 'AZURE', STACK: 'LANDING_ZONE' },
      },
      aliyun: {
        detailSlug: 'aliyun-landing-zone',
        githubWorkflow: 'landing-zone.yml',
        githubInputs: { provider: 'aliyun', stack: 'landing-zone-mvp' },
        gitlabPipeline: 'landing-zone',
        gitlabVariables: { PROVIDER: 'ALIYUN', STACK: 'LANDING_ZONE_MVP' },
      },
    },
  },
  {
    key: 'compute',
    title: '计算',
    subtitle: 'Compute',
    description: '提供弹性计算能力，支撑批处理、微服务和长驻应用的核心算力。',
    highlights: ['弹性伸缩与自动调度', '多种实例规格与镜像', '支持与监控、伸缩服务集成'],
    products: {
      aws: 'Amazon EC2',
      gcp: 'Compute Engine',
      azure: 'Virtual Machines',
      aliyun: '弹性计算 ECS',
    },
    iac: {
      aws: {
        detailSlug: 'ec2',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aws', target: 'ec2' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AWS', TARGET: 'EC2' },
      },
      gcp: {
        detailSlug: 'compute-engine',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'gcp', target: 'compute-engine' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'GCP', TARGET: 'COMPUTE_ENGINE' },
      },
      azure: {
        detailSlug: 'virtual-machines',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'azure', target: 'virtual-machines' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AZURE', TARGET: 'VIRTUAL_MACHINES' },
      },
      aliyun: {
        detailSlug: 'ecs',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aliyun', target: 'ecs' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'ALIYUN', TARGET: 'ECS' },
      },
    },
  },
  {
    key: 'network',
    title: '网络',
    subtitle: 'Networking',
    description: '构建隔离的虚拟网络、子网与路由策略，连接多区域资源。',
    highlights: ['支持多 AZ 网络拓扑', '内外网访问控制策略', '集成流量监控与日志分析'],
    products: {
      aws: 'Amazon VPC',
      gcp: 'Virtual Private Cloud',
      azure: 'Virtual Network',
      aliyun: '专有网络 VPC',
    },
    iac: {
      aws: {
        detailSlug: 'vpc',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aws', target: 'vpc' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AWS', TARGET: 'VPC' },
      },
      gcp: {
        detailSlug: 'vpc',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'gcp', target: 'vpc' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'GCP', TARGET: 'VPC' },
      },
      azure: {
        detailSlug: 'virtual-network',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'azure', target: 'virtual-network' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AZURE', TARGET: 'VIRTUAL_NETWORK' },
      },
      aliyun: {
        detailSlug: 'vpc',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aliyun', target: 'vpc' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'ALIYUN', TARGET: 'VPC' },
      },
    },
  },
  {
    key: 'dns_cdn',
    title: 'DNS / CDN',
    subtitle: 'DNS & CDN',
    description: '提供高可用域名解析与全球内容分发，加速访问并保障业务连续性。',
    highlights: ['智能流量调度与健康检查', '边缘缓存与 HTTPS 加速', '与 WAF / DDoS 防护协同'],
    products: {
      aws: 'Amazon Route 53 & CloudFront',
      gcp: 'Cloud DNS & Cloud CDN',
      azure: 'Azure DNS & Front Door',
      aliyun: '云解析 DNS & 全站加速',
    },
    iac: {
      aws: {
        detailSlug: 'route53-cloudfront',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aws', target: 'dns-cdn' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AWS', TARGET: 'DNS_CDN' },
      },
      gcp: {
        detailSlug: 'cloud-dns-cdn',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'gcp', target: 'dns-cdn' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'GCP', TARGET: 'DNS_CDN' },
      },
      azure: {
        detailSlug: 'azure-dns-front-door',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'azure', target: 'dns-cdn' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AZURE', TARGET: 'DNS_CDN' },
      },
      aliyun: {
        detailSlug: 'dns-acceleration',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aliyun', target: 'dns-cdn' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'ALIYUN', TARGET: 'DNS_CDN' },
      },
    },
  },
  {
    key: 'security',
    title: '安全防护',
    subtitle: 'Security',
    description: '强化云上网络边界与访问控制，保障业务安全合规运行。',
    highlights: ['细粒度入出站策略控制', '统一日志审计与告警', '可复用的安全基线模板'],
    products: {
      aws: 'VPC Security Group',
      gcp: 'VPC Firewall Rules',
      azure: 'Network Security Group',
      aliyun: '安全组',
    },
    iac: {
      aws: {
        detailSlug: 'security-group',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aws', target: 'security-group' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AWS', TARGET: 'SECURITY_GROUP' },
      },
      gcp: {
        detailSlug: 'vpc-firewall',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'gcp', target: 'vpc-firewall' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'GCP', TARGET: 'VPC_FIREWALL' },
      },
      azure: {
        detailSlug: 'network-security-group',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'azure', target: 'network-security-group' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AZURE', TARGET: 'NETWORK_SECURITY_GROUP' },
      },
      aliyun: {
        detailSlug: 'security-group',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aliyun', target: 'security-group' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'ALIYUN', TARGET: 'SECURITY_GROUP' },
      },
    },
  },
  {
    key: 'load_balancer',
    title: '负载均衡',
    subtitle: 'Load Balancing',
    description: '在多个计算节点间智能分发流量，确保高可用与弹性扩缩。',
    highlights: ['支持七层与四层协议', '内置健康检查与会话保持', '可与自动伸缩策略联动'],
    products: {
      aws: 'Application Load Balancer',
      gcp: 'Cloud Load Balancing',
      azure: 'Azure Load Balancer',
      aliyun: '共享型 SLB',
    },
    iac: {
      aws: {
        detailSlug: 'alb',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aws', target: 'alb' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AWS', TARGET: 'ALB' },
      },
      gcp: {
        detailSlug: 'cloud-load-balancing',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'gcp', target: 'cloud-load-balancing' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'GCP', TARGET: 'CLOUD_LOAD_BALANCING' },
      },
      azure: {
        detailSlug: 'azure-load-balancer',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'azure', target: 'azure-load-balancer' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AZURE', TARGET: 'AZURE_LOAD_BALANCER' },
      },
      aliyun: {
        detailSlug: 'slb',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aliyun', target: 'slb' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'ALIYUN', TARGET: 'SLB' },
      },
    },
  },
  {
    key: 'storage',
    title: '存储',
    subtitle: 'Storage',
    description: '面向非结构化数据的对象存储，提供高耐久与低成本的数据湖基础。',
    highlights: ['多区域冗余存储级别', '事件通知与生命周期管理', '统一访问控制与加密'],
    products: {
      aws: 'Amazon S3',
      gcp: 'Cloud Storage',
      azure: 'Azure Blob Storage',
      aliyun: '对象存储 OSS',
    },
    iac: {
      aws: {
        detailSlug: 's3',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aws', target: 's3' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AWS', TARGET: 'S3' },
      },
      gcp: {
        detailSlug: 'cloud-storage',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'gcp', target: 'cloud-storage' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'GCP', TARGET: 'CLOUD_STORAGE' },
      },
      azure: {
        detailSlug: 'blob-storage',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'azure', target: 'storage-account' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AZURE', TARGET: 'STORAGE_ACCOUNT' },
      },
      aliyun: {
        detailSlug: 'oss',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aliyun', target: 'oss' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'ALIYUN', TARGET: 'OSS' },
      },
    },
  },
  {
    key: 'database',
    title: '数据库',
    subtitle: 'Database',
    description: '托管关系型数据库服务，提供高可用、备份与性能监控能力。',
    highlights: ['自动备份与多可用区部署', '参数模板与性能洞察', '支持主从与只读实例'],
    products: {
      aws: 'Amazon RDS',
      gcp: 'Cloud SQL',
      azure: 'Azure Database for PostgreSQL',
      aliyun: '云数据库 RDS',
    },
    iac: {
      aws: {
        detailSlug: 'rds',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aws', target: 'rds' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AWS', TARGET: 'RDS' },
      },
      gcp: {
        detailSlug: 'cloud-sql',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'gcp', target: 'cloud-sql' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'GCP', TARGET: 'CLOUD_SQL' },
      },
      azure: {
        detailSlug: 'azure-database',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'azure', target: 'azure-database' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AZURE', TARGET: 'AZURE_DATABASE' },
      },
      aliyun: {
        detailSlug: 'apsaradb-rds',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aliyun', target: 'apsaradb-rds' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'ALIYUN', TARGET: 'APSARADB_RDS' },
      },
    },
  },
  {
    key: 'cache',
    title: '缓存',
    subtitle: 'Cache',
    description: '低延迟内存数据库服务，加速会话、排行榜等热点数据场景。',
    highlights: ['兼容 Redis/Memcached 协议', '高可用主从复制', '支持自动故障转移与备份'],
    products: {
      aws: 'Amazon ElastiCache',
      gcp: 'MemoryStore for Redis',
      azure: 'Azure Cache for Redis',
      aliyun: '云数据库 Redis',
    },
    iac: {
      aws: {
        detailSlug: 'elasticache',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aws', target: 'elasticache' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AWS', TARGET: 'ELASTICACHE' },
      },
      gcp: {
        detailSlug: 'memorystore',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'gcp', target: 'memorystore' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'GCP', TARGET: 'MEMORYSTORE' },
      },
      azure: {
        detailSlug: 'redis-cache',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'azure', target: 'redis-cache' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AZURE', TARGET: 'REDIS_CACHE' },
      },
      aliyun: {
        detailSlug: 'apsaradb-redis',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aliyun', target: 'redis' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'ALIYUN', TARGET: 'REDIS' },
      },
    },
  },
  {
    key: 'queue',
    title: '队列',
    subtitle: 'Queue',
    description: '可靠的消息队列服务，解耦应用组件并支持弹性消费。',
    highlights: ['至少一次与精确一次投递模式', '死信队列与重试策略', '与事件驱动架构无缝集成'],
    products: {
      aws: 'Amazon SQS',
      gcp: 'Pub/Sub',
      azure: 'Azure Service Bus',
      aliyun: '消息服务 MNS',
    },
    iac: {
      aws: {
        detailSlug: 'sqs',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aws', target: 'sqs' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AWS', TARGET: 'SQS' },
      },
      gcp: {
        detailSlug: 'pubsub',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'gcp', target: 'pubsub' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'GCP', TARGET: 'PUBSUB' },
      },
      azure: {
        detailSlug: 'service-bus',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'azure', target: 'service-bus' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AZURE', TARGET: 'SERVICE_BUS' },
      },
      aliyun: {
        detailSlug: 'mns',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aliyun', target: 'mns' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'ALIYUN', TARGET: 'MNS' },
      },
    },
  },
  {
    key: 'edge_iot',
    title: '边缘计算 / IoT',
    subtitle: 'Edge & IoT',
    description: '连接海量终端设备并在边缘侧实时处理数据，助力工业与物联网场景。',
    highlights: ['设备身份与安全接入管理', '规则引擎与流式处理', '边缘部署与离线缓存'],
    products: {
      aws: 'AWS IoT Core & Greengrass',
      gcp: 'Cloud IoT Core & Edge',
      azure: 'Azure IoT Hub & IoT Edge',
      aliyun: '物联网平台 & 铂金版边缘计算',
    },
    iac: {
      aws: {
        detailSlug: 'aws-iot',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aws', target: 'edge-iot' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AWS', TARGET: 'EDGE_IOT' },
      },
      gcp: {
        detailSlug: 'gcp-iot',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'gcp', target: 'edge-iot' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'GCP', TARGET: 'EDGE_IOT' },
      },
      azure: {
        detailSlug: 'azure-iot',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'azure', target: 'edge-iot' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AZURE', TARGET: 'EDGE_IOT' },
      },
      aliyun: {
        detailSlug: 'aliyun-iot',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aliyun', target: 'edge-iot' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'ALIYUN', TARGET: 'EDGE_IOT' },
      },
    },
  },
  {
    key: 'container',
    title: '容器服务',
    subtitle: 'Container Service',
    description: '托管 Kubernetes 集群，提供自动控制面维护与节点扩缩。',
    highlights: ['一键升级与版本管理', '节点池弹性伸缩', '集成服务网格与监控'],
    products: {
      aws: 'Amazon EKS',
      gcp: 'Google Kubernetes Engine',
      azure: 'Azure Kubernetes Service',
      aliyun: '容器服务 ACK',
    },
    iac: {
      aws: {
        detailSlug: 'eks',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aws', target: 'eks' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AWS', TARGET: 'EKS' },
      },
      gcp: {
        detailSlug: 'gke',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'gcp', target: 'gke' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'GCP', TARGET: 'GKE' },
      },
      azure: {
        detailSlug: 'aks',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'azure', target: 'aks' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AZURE', TARGET: 'AKS' },
      },
      aliyun: {
        detailSlug: 'ack',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aliyun', target: 'ack' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'ALIYUN', TARGET: 'ACK' },
      },
    },
  },
  {
    key: 'data_service',
    title: '数据服务',
    subtitle: 'Data Service',
    description: '大数据与分析平台，支持批处理、交互式分析与数据湖构建。',
    highlights: ['与对象存储深度集成', '弹性集群与作业调度', '支持多种开源生态'],
    products: {
      aws: 'Amazon EMR',
      gcp: 'Dataproc',
      azure: 'Azure Synapse Analytics',
      aliyun: 'E-MapReduce',
    },
    iac: {
      aws: {
        detailSlug: 'emr',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aws', target: 'emr' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AWS', TARGET: 'EMR' },
      },
      gcp: {
        detailSlug: 'dataproc',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'gcp', target: 'dataproc' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'GCP', TARGET: 'DATAPROC' },
      },
      azure: {
        detailSlug: 'synapse',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'azure', target: 'synapse' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AZURE', TARGET: 'SYNAPSE' },
      },
      aliyun: {
        detailSlug: 'aliyun-emr',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aliyun', target: 'emr' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'ALIYUN', TARGET: 'EMR' },
      },
    },
  },
  {
    key: 'observability',
    title: '监控日志 / 事件总线',
    subtitle: 'Observability & Events',
    description: '统一采集指标、日志与事件，构建告警联动与自动化运营能力。',
    highlights: ['日志检索与指标看板', '事件路由与自动化规则', '与 APM / 安全中心整合'],
    products: {
      aws: 'Amazon CloudWatch & EventBridge',
      gcp: 'Cloud Operations & Eventarc',
      azure: 'Azure Monitor & Event Grid',
      aliyun: '云监控 CloudMonitor & EventBridge',
    },
    iac: {
      aws: {
        detailSlug: 'cloudwatch-eventbridge',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aws', target: 'observability' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AWS', TARGET: 'OBSERVABILITY' },
      },
      gcp: {
        detailSlug: 'operations-eventarc',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'gcp', target: 'observability' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'GCP', TARGET: 'OBSERVABILITY' },
      },
      azure: {
        detailSlug: 'monitor-event-grid',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'azure', target: 'observability' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AZURE', TARGET: 'OBSERVABILITY' },
      },
      aliyun: {
        detailSlug: 'cloudmonitor-eventbridge',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aliyun', target: 'observability' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'ALIYUN', TARGET: 'OBSERVABILITY' },
      },
    },
  },
  {
    key: 'api_integration',
    title: 'API 网关 / 数据集成',
    subtitle: 'API Gateway & Integration',
    description: '统一管理 API 生命周期并打通数据管道，支撑混合云与多系统集成。',
    highlights: ['版本管理与访问控制', '节流限流与安全防护', '数据同步与 ETL 自动化'],
    products: {
      aws: 'Amazon API Gateway & AppFlow',
      gcp: 'API Gateway & Integration Connectors',
      azure: 'Azure API Management & Data Factory',
      aliyun: 'API 网关 & 数据集成 DataWorks',
    },
    iac: {
      aws: {
        detailSlug: 'api-gateway-appflow',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aws', target: 'api-integration' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AWS', TARGET: 'API_INTEGRATION' },
      },
      gcp: {
        detailSlug: 'apigateway-integration',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'gcp', target: 'api-integration' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'GCP', TARGET: 'API_INTEGRATION' },
      },
      azure: {
        detailSlug: 'apim-data-factory',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'azure', target: 'api-integration' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AZURE', TARGET: 'API_INTEGRATION' },
      },
      aliyun: {
        detailSlug: 'apigateway-dataworks',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aliyun', target: 'api-integration' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'ALIYUN', TARGET: 'API_INTEGRATION' },
      },
    },
  },
  {
    key: 'iam',
    title: '身份与访问管理',
    subtitle: 'Identity & Access',
    description: '集中式身份权限管理，构建精细化访问控制与审计能力。',
    highlights: ['细粒度角色与策略', '多因子认证与单点登录', '跨账户联合与审计日志'],
    products: {
      aws: 'AWS IAM',
      gcp: 'Cloud IAM',
      azure: 'Azure Active Directory',
      aliyun: '访问控制 RAM',
    },
    iac: {
      aws: {
        detailSlug: 'iam',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aws', target: 'iam' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AWS', TARGET: 'IAM' },
      },
      gcp: {
        detailSlug: 'cloud-iam',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'gcp', target: 'iam' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'GCP', TARGET: 'IAM' },
      },
      azure: {
        detailSlug: 'azure-ad',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'azure', target: 'role-assignment' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'AZURE', TARGET: 'ROLE_ASSIGNMENT' },
      },
      aliyun: {
        detailSlug: 'ram',
        githubWorkflow: 'iac-apply.yml',
        githubInputs: { provider: 'aliyun', target: 'ram' },
        gitlabPipeline: 'iac-deploy',
        gitlabVariables: { PROVIDER: 'ALIYUN', TARGET: 'RAM' },
      },
    },
  },
]

export const PROVIDERS: ProviderDefinition[] = [
  { key: 'aws', label: 'AWS' },
  { key: 'gcp', label: 'GCP' },
  { key: 'azure', label: 'Azure' },
  { key: 'aliyun', label: '阿里云' },
]
